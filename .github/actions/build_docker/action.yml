name: Build and push docker image to registry
description: 'action to build and push docker image'

inputs:
  image_name:
    description: Image name
    required: true
  docker_registry:
    description: Docker registry
    required: true
  registry_org:
    description: Docker registry organisation
    required: true
  additional_docker_tag:
    description: Additional docker tag that can be used to specify stable tags
    required: false
  additional_docker_build_args:
    description: Additional docker build args
    required: false
  file:
    description: "Path to the Dockerfile"
    required: false
  push:
    description: Push docker image to registry flag
    required: true
  load:
    description: Load docker image into local docker
    required: false
    default: false
  app_version:
    description: App version
    required: true
  tag_latest:
    description: Tag image as 'latest'
    required: false
    default: true
  upload_image_artifact:
    description: Upload image to artifacts in GitHub Actions
    required: false
    default: false
  image_artifact_retention_days:
    description: Number of days to keep the image in artifacts
    required: false
  HMPPS_QUAYIO_USER:
    description: Docker registry username
    required: false
  HMPPS_QUAYIO_TOKEN:
    description: Docker registry token
    required: false

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v4
    - uses: docker/setup-qemu-action@v3
    - uses: docker/setup-buildx-action@v3
    - name: Docker login if Docker registry is quay.io
      if: ${{ inputs.docker_registry  == 'quay.io' }}
      uses: docker/login-action@v3
      with:
        registry: ${{ inputs.docker_registry }}
        username: ${{ inputs.HMPPS_QUAYIO_USER }}
        password: ${{ inputs.HMPPS_QUAYIO_TOKEN }}

    - name: Docker login if Docker registry is ghcr.io
      if: ${{ inputs.docker_registry  == 'ghcr.io' }}
      uses: docker/login-action@v3
      with:
        registry: ${{ inputs.docker_registry }}
        username: ${{ github.actor }}
        password: ${{ github.token }}

      # - name: Configure AWS credentials
      #   if: ${{ inputs.docker_registry  == 'ecr' }}
      #   uses: aws-actions/configure-aws-credentials@v2
      #   with:
      #     aws-access-key-id: ${{ secrets.AWS_MGMT_ECR_ID }}
      #     aws-secret-access-key: ${{ secrets.AWS_MGMT_ECR_KEY }}
      #     aws-region: eu-west-2

      # - name: Login to Amazon ECR
      #   if: ${{ inputs.docker_registry  == 'ecr' }}
      #   uses: aws-actions/amazon-ecr-login@v1

    - name: Set Docker Tags
      id: set_tags
      shell: bash
      run: |
        TAGS="${{ inputs.docker_registry }}/${{ inputs.registry_org }}/${{ inputs.image_name }}:${{ inputs.app_version }}"
        
        if [[ "${{ inputs.tag_latest }}" == "true" ]]; then
          TAGS="${TAGS},${{ inputs.docker_registry }}/${{ inputs.registry_org }}/${{ inputs.image_name }}:latest"
        fi
        
        if [[ -n "${{ inputs.additional_docker_tag }}" ]]; then
          TAGS="${TAGS},${{ inputs.docker_registry }}/${{ inputs.registry_org }}/${{ inputs.image_name }}:${{ inputs.additional_docker_tag }}"
        fi
        
        echo "tags=$TAGS" >> "$GITHUB_OUTPUT"

    - name: Build Docker Image
      uses: docker/build-push-action@v6
      with:
        cache-from: type=gha
        cache-to: type=gha,mode=max
        context: .
        push: ${{ inputs.push }}
        load: ${{ inputs.load }}
        provenance: false
        file: ${{ inputs.file }}
        build-args: |
          "BUILD_NUMBER=${{ inputs.app_version }}"
          "GIT_REF=${{ github.sha }}"
          "GIT_BRANCH=${{ github.ref_name }}"
          "${{ inputs.additional_docker_build_args }}"
        tags: ${{ steps.set_tags.outputs.tags }}

    - name: Export image
      if: ${{ inputs.upload_image_artifact ==  'true' }}
      id: export_image
      shell: bash
      run: docker save ${{ inputs.docker_registry }}/${{ inputs.registry_org }}/${{ inputs.image_name }}:${{ inputs.app_version }} -o ${{ runner.temp }}/build_image.tar

    - name: Upload image to artifacts
      if: ${{ inputs.upload_image_artifact ==  'true' }}
      id: upload_image_artifact
      uses: actions/upload-artifact@v4
      with:
        name: build_image
        path: ${{ runner.temp }}/build_image.tar
        retention-days: ${{ inputs.image_artifact_retention_days }}
